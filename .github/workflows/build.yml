name: Build
on:
  push:
    paths-ignore:
      - '*.pdf'
  pull_request:
    branches:
      - master
jobs:
  build_latex:
    runs-on: ubuntu-latest
    container:
      image: danteev/texlive:latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        extra_system_packages: texlive-latex-extra
    - name: Build LaTeX
      run: |
        echo $SHELL
        ls
        for file in $(ls); do
          if [ ! -d "$file" ]; then continue; fi;
          echo $file;
          if [ "$file" = "cartouche" ]; then continue; fi;
          cd $PWD/$file
          enonce="Compile_${file}_ENONCE"
          solution="Compile_${file}_ENONCE_SOLUTION"
          latexmk -synctex=1 -interaction=nonstopmode -file-line-error -pdf -outdir=. $enonce;
          latexmk -synctex=1 -interaction=nonstopmode -file-line-error -pdf -outdir=. $solution;
          cd ..
        done
  check_file_metadata:
    runs-on: ubuntu-latest
    container:
      image: danteev/texlive:latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        extra_system_packages: texlive-latex-extra
    - name: Check Metadata
      run: |
        echo $SHELL
        ls
        declare -a table_file_name
        declare -a table_metadata
        for dir in $(ls); do
          if [ ! -d "$dir" ]; then continue; fi;
          echo $dir;
          if [ "$dir" = "cartouche" ]; then continue; fi;
          cd $PWD/$dir
          if [ ! -e ${dir}.json ]; then table_file_name+=( "$dir" ); table_metadata+=( False ); 
          else table_file_name+=("$dir); table_metadata+=( True ); fi;
          cd ..
        done
        declare -a missing_metadata_files
        for index in "${!table_metadata[@]}"; do
          if ! $table_metadata[$index]; then missing_metadata_file+="${table_file_name[$index]}"; fi
        done
        if ${#missing_metadata_file[@]} > 0; then 
        curl --request POST --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' --header 'content-type: application/json' --data '{
            "context": "tests",
            "state": "failure",
            "description": "Missing metadata files : ${missing_metadata_file[@]}",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }' exit 1; else 
          curl --request POST --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' --header 'content-type: application/json' --data '{
            "context": "tests",
            "state": "success",
            "description": "All metadata are present",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'; fi
        
